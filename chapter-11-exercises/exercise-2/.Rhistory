install.packages("dplyr")
library("dplyr")
library("dplyr")
name <- c("Ada", "Bob", "Chris", "Diya", "Emma")
height <- c(64, 74, 69, 69, 71)
weight <- c(135, 156, 139, 144, 152)
my_data <- data.frame(name, height, weight, stringsAsFactors=FALSE)
# use dplyr to get a data frame # with `name` and `height` cols
select(my_data, name, height)
# Install and load the "fueleconomy" package
#install.packages("devtools")
#devtools::install_github("hadley/fueleconomy")
library(fueleconomy)
# Install the `"nycflights13"` package. Load (`library()`) the package.
# You'll also need to load `dplyr`
install.packages("nycflights13")
# Install the `"nycflights13"` package. Load (`library()`) the package.
# You'll also need to load `dplyr`
library("dplyr")
library("nycflights13")
View(flights)
# Use `dplyr` to give the data frame a new column that is the amount of time
# gained or lost while flying (that is: how much of the delay arriving occured
# during flight, as opposed to before departing).
mutate(flights, delayed_in_air = arr_delay - dep_delay)
# Use `dplyr` to give the data frame a new column that is the amount of time
# gained or lost while flying (that is: how much of the delay arriving occured
# during flight, as opposed to before departing).
flights <- mutate(flights, delayed_in_air = arr_delay - dep_delay)
View(flights)
# Use `dplyr` to sort your data frame in descending order by the column you just
# created. Remember to save this as a variable (or in the same one!)
arrange(flights, delayed_in_air)
# Use `dplyr` to sort your data frame in descending order by the column you just
# created. Remember to save this as a variable (or in the same one!)
arrange(flights, -delayed_in_air)
View(flights)
# On average, did flights gain or lose time?
# Note: use the `na.rm = TRUE` argument to remove NA values from your aggregation
summarize(flights, average = mean(delayed_in_air, na.rm = TRUE)
# On average, did flights gain or lose time?
# Note: use the `na.rm = TRUE` argument to remove NA values from your aggregation
summarize(flights, average = mean(delayed_in_air, na.rm = TRUE))
# On average, did flights gain or lose time?
# Note: use the `na.rm = TRUE` argument to remove NA values from your aggregation
summarize(flights, average = mean(delayed_in_air, na.rm = TRUE))
# Create a data.frame of flights headed to SeaTac ('SEA'), only including the
# origin, destination, and the "gain_in_air" column you just created
to_sea <- filter(flights, dest == "SEA")
View(to_sea)
to_sea <- select(to_sea, origin, dest, delayed_in_air)
# On average, did flights to SeaTac gain or loose time?
summarize(to_sea, avg_delayed = mean(delayed_in_air, na.rm = TRUE))
