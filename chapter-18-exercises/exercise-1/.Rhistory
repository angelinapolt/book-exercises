#1 part 4: Modifying the data frame
# filtering for people who are  for acting/ formatting for a markdown image
trending_data <- trending_data %>%
filter(department == "Acting")
#creating a column for the actor's photo
trending_data <- trending_data %>%
mutate(photo == paste0("![profile photo](","https://image.tmdb.org/t/p/h100",
trending_data$profile_path,")")) %>%
#selecting the columns with actor's name and photo
select(name, photo) %>%
#selecting the first five actors
head(5)
return(trending_data)
}
get_trending_table("Ryan Reynolds")
source('C:/Users/serge/a5-data-report-angelinapolt/analysis.R', echo=TRUE)
library("tidyr")
library("knitr")
#1 defining a function that acesses the info on the trending data and returns a data frame
get_trending_table <- function(search_name) {
#1 part 1
# Using the get function to get the "Get Trending" endpoint
endpoint <- ("/trending/person/week")
uri <- paste0(base_url, endpoint)
trending <- GET(uri, query = key_param)
print(trending)
#1 part 2
# Converting the text from JSON into R data
response_text <- content(trending, "text")
print(response_text)
setwd("C:/Users/serge/a5-data-report-angelinapolt")
library("httr")
library("jsonlite")
library("dplyr")
library("tidyr")
library("knitr")
#defining a variable and assigning it the base url
base_url <- "https://api.themoviedb.org/3"
# 1 assigning varaible to tmb key
source("apikey.R")
key_param <- list(api_key = tmdb_key)
#2 adding filename to gitingnore file
#done in .gitignore file
##########################
#####  Data analysis #####
##########################
#1 defining a function that acesses the info on the trending data and returns a data frame
get_trending_table <- function(search_name) {
#1 part 1
# Using the get function to get the "Get Trending" endpoint
endpoint <- ("/trending/person/week")
uri <- paste0(base_url, endpoint)
trending <- GET(uri, query = key_param)
print(trending)
#1 part 2
# Converting the text from JSON into R data
response_text <- content(trending, "text")
print(response_text)
responding_data <- fromJSON(response_text)
#1 part 3
#Inspecting the data content and finding the trending data
trending_df <- response_data$results
get_trending_table <- function(search_name) {
#1 part 1
# Using the get function to get the "Get Trending" endpoint
endpoint <- ("/trending/person/week")
uri <- paste0(base_url, endpoint)
trending <- GET(uri, query = key_param)
print(trending)
#1 part 2
# Converting the text from JSON into R data
response_text <- content(trending, "text")
responding_data <- fromJSON(response_text)
#1 part 3
#Inspecting the data content and finding the trending data
trending_df <- response_data$results
#1 part 4: Modifying the data frame
# filtering for people who are  for acting/ formatting for a markdown image
data_actors <- trending_df %>%
filter(department_known == "Acting") %>%
#creating a column for the actor's photo
data_actors <- trending_df %>%
filter(known_for_department ==  "Acting") %>%
mutate(photo == paste0("![",name,"](https://image.tmdb.org/t/p/h100", profile_path,")")) %>%
#selecting the columns with actor's name and photo
select(name, photo) %>%
#selecting the first five actors
head(5)
return(data_actors)
}
get_trending_table("Ryan Reynolds")
#defining a variable and assigning it the base url
base_url <- "https://api.themoviedb.org/3"
# 1 assigning varaible to tmb key
source("apikey.R")
key_param <- list(api_key = tmdb_key)
#2 adding filename to gitingnore file
#done in .gitignore file
##########################
#####  Data analysis #####
##########################
#1 defining a function that acesses the info on the trending data and returns a data frame
get_trending_table <- function() {
#1 part 1
# Using the get function to get the "Get Trending" endpoint
endpoint <- ("/trending/person/week")
uri <- paste0(base_url, endpoint)
trending <- GET(uri, query = key_param)
print(trending)
#1 part 2
# Converting the text from JSON into R data
response_text <- content(trending, "text")
responding_data <- fromJSON(response_text)
#1 part 3
#Inspecting the data content and finding the trending data
trending_df <- response_data$results
#1 part 4: Modifying the data frame
# filtering for people who are  for acting/ formatting for a markdown image
data_actors <- trending_df %>%
filter(department_known == "Acting") %>%
#creating a column for the actor's photo
data_actors <- trending_df %>%
filter(known_for_department ==  "Acting") %>%
mutate(photo == paste0("![",name,"](https://image.tmdb.org/t/p/h100", profile_path,")")) %>%
#selecting the columns with actor's name and photo
select(name, photo) %>%
#selecting the first five actors
head(5)
return(data_actors)
}
get_trending_table()
#2. Specific Actor Data
# defining a function that will return a list of data about the actor specified
get_actor_data <- function(search_actor_name) {
#2 part 1
#specifying the actor by name through requesting  "Search People" endpoint
endpoint <- "/search/person"
searh_name_uri <- paste(base_uri, endpoint)
params_list <- list("query" = search_actor_name, "api_key" = key_param$api_key)
search_response <- GET(search_name_uri, query = params_list)
search_response_text <- content(search_response, type = "text")
search_response_text <- fromJSON(search_response_text)
actors_data <- search_response_text$results
#extracting the actor's interval id number
number_id <- actors_data[actors_data$name == search_actor_name, "id"]
#extracting the vector of titles of movies the actor is known for.
movies_known_for <- actors_data$known_for[[1]]$title
#2 part 3
#Getting an endpoint to "Get Person Details"
second_endpoint <- "/person/"
serch_person_uri <- paste0(base_uri, second_endpoint, number_id)
second_response <- GET(search_person_uri, "query" = key_param)
second_response_text <- content(second_response, type = "text")
second_response_text <- fromJSON(second_response_text)
#View(second_response_text)
get_biography <- second_response_text$biography
get_imdb_id <- second_response_text$imdb_id
#2 part 4
#returning a list with the actors name, id, imbd id, biography, and movie titles they are known for
actor_result <- list("Name" = search_actor_name, "IMDB id" = get_imdb_id, "id" = number_id,
"Biography" = get_biography)
}
print(get_actor_data("Ryan Reynolds"))
print(get_actor_data("Ryan Reynolds"))
#2. Specific Actor Data
# defining a function that will return a list of data about the actor specified
get_actor_data <- function(search_actor_name) {
#2 part 1
#specifying the actor by name through requesting  "Search People" endpoint
endpoint <- "/search/person"
searh_name_uri <- paste(base_uri, endpoint)
params_list <- list("query" = search_actor_name, "api_key" = key_param$api_key)
search_response <- GET(search_name_uri, query = params_list)
search_response_text <- content(search_response, type = "text")
search_response_text <- fromJSON(search_response_text)
actors_data <- search_response_text$results
#extracting the actor's interval id number
number_id <- actors_data[actors_data$name == search_actor_name, "id"]
#extracting the vector of titles of movies the actor is known for.
movies_known_for <- actors_data$known_for[[1]]$title
#2 part 3
#Getting an endpoint to "Get Person Details"
second_endpoint <- "/person/"
serch_person_uri <- paste0(base_uri, second_endpoint, number_id)
second_response <- GET(search_person_uri, "query" = key_param)
second_response_text <- content(second_response, type = "text")
second_response_text <- fromJSON(second_response_text)
View(second_response_text)
setwd("C:/Users/serge/a5-data-report-angelinapolt")
##################################
library("httr")
library("jsonlite")
library("dplyr")
library("tidyr")
library("knitr")
#defining a variable and assigning it the base url
base_url <- "https://api.themoviedb.org/3"
# 1 assigning varaible to tmb key
source("apikey.R")
key_param <- list(api_key = tmdb_key)
#2 adding filename to gitingnore file
#done in .gitignore file
##########################
#####  Data analysis #####
##########################
#1 defining a function that acesses the info on the trending data and returns a data frame
get_trending_table <- function() {
#1 part 1
# Using the get function to get the "Get Trending" endpoint
endpoint <- ("/trending/person/week")
uri <- paste0(base_url, endpoint)
trending <- GET(uri, query = key_param)
print(trending)
#1 part 2
# Converting the text from JSON into R data
response_text <- content(trending, "text")
responding_data <- fromJSON(response_text)
#1 part 3
#Inspecting the data content and finding the trending data
trending_df <- response_data$results
#1 part 4: Modifying the data frame
# filtering for people who are  for acting/ formatting for a markdown image
data_actors <- trending_df %>%
filter(department_known == "Acting") %>%
#creating a column for the actor's photo
data_actors <- trending_df %>%
filter(known_for_department ==  "Acting") %>%
mutate(photo == paste0("![",name,"](https://image.tmdb.org/t/p/h100", profile_path,")")) %>%
#selecting the columns with actor's name and photo
select(name, photo) %>%
#selecting the first five actors
head(5)
return(data_actors)
}
get_trending_table()
#2. Specific Actor Data
# defining a function that will return a list of data about the actor specified
get_actor_data <- function(search_actor_name) {
#2 part 1
#specifying the actor by name through requesting  "Search People" endpoint
endpoint <- "/search/person"
searh_name_uri <- paste(base_url, endpoint)
params_list <- list("query" = search_actor_name, "api_key" = key_param$api_key)
search_response <- GET(search_name_uri, query = params_list)
search_response_text <- content(search_response, type = "text")
search_response_text <- fromJSON(search_response_text)
actors_data <- search_response_text$results
#extracting the actor's interval id number
number_id <- actors_data[actors_data$name == search_actor_name, "id"]
#extracting the vector of titles of movies the actor is known for.
movies_known_for <- actors_data$known_for[[1]]$title
#2 part 3
#Getting an endpoint to "Get Person Details"
second_endpoint <- "/person/"
serch_person_uri <- paste0(base_url, second_endpoint, number_id)
second_response <- GET(search_person_uri, "query" = key_param)
second_response_text <- content(second_response, type = "text")
second_response_text <- fromJSON(second_response_text)
View(second_response_text)
get_biography <- second_response_text$biography
get_imdb_id <- second_response_text$imdb_id
#2 part 4
#returning a list with the actors name, id, imbd id, biography, and movie titles they are known for
actor_result <- list("Name" = search_actor_name, "IMDB id" = get_imdb_id, "id" = number_id,
"Biography" = get_biography)
}
print(get_actor_data("Ryan Reynolds"))
analysis_results <-get_trending_table()
View(biggest_failure)
analysis_results <- get_trending_table()
View(avg_year_category_df)
results <- get_trending_table()
#1 defining a function that acesses the info on the trending data and returns a data frame
get_trending_table <- function() {
#1 part 1
# Using the get function to get the "Get Trending" endpoint
endpoint <- ("/trending/person/week")
uri <- paste0(base_url, endpoint)
trending <- GET(uri, query = key_param)
print(trending)
#1 part 2
# Converting the text from JSON into R data
response_text <- content(trending, "text")
responding_data <- fromJSON(response_text)
#1 part 3
#Inspecting the data content and finding the trending data
trending_df <- response_data$results
#1 part 4: Modifying the data frame
# filtering for people who are  for acting/ formatting for a markdown image
data_actors <- trending_df %>%
filter(department_known == "Acting") %>%
#creating a column for the actor's photo
data_actors <- trending_df %>%
filter(known_for_department ==  "Acting") %>%
mutate(photo == paste0("![",name,"](https://image.tmdb.org/t/p/h100", profile_path,")")) %>%
#selecting the columns with actor's name and photo
select(name, photo) %>%
#selecting the first five actors
head(5)
return(data_actors)
}
results <- get_trending_table()
View(cex_long_df)
library("httr")
library("jsonlite")
library("dplyr")
library("tidyr")
library("knitr")
#defining a variable and assigning it the base url
base_url <- "https://api.themoviedb.org/3"
# 1 assigning varaible to tmb key
source("apikey.R")
key_param <- list(api_key = tmdb_key)
#2 adding filename to gitingnore file
#done in .gitignore file
##########################
#####  Data analysis #####
##########################
#1 defining a function that acesses the info on the trending data and returns a data frame
get_trending_table <- function() {
#1 part 1
# Using the get function to get the "Get Trending" endpoint
endpoint <- ("/trending/person/week")
uri <- paste0(base_url, endpoint)
trending <- GET(uri, query = key_param)
print(trending)
#1 part 2
# Converting the text from JSON into R data
response_text <- content(trending, "text")
responding_data <- fromJSON(response_text)
#1 part 3
#Inspecting the data content and finding the trending data
trending_df <- response_data$results
#1 part 4: Modifying the data frame
# filtering for people who are  for acting/ formatting for a markdown image
data_actors <- trending_df %>%
filter(department_known == "Acting") %>%
#creating a column for the actor's photo
data_actors <- trending_df %>%
filter(known_for_department ==  "Acting") %>%
mutate(photo == paste0("![",name,"](https://image.tmdb.org/t/p/h100", profile_path,")")) %>%
#selecting the columns with actor's name and photo
select(name, photo) %>%
#selecting the first five actors
head(5)
return(data_actors)
}
results <- get_trending_table()
##################################
##### Accessing the Data API #####
##################################
library("httr")
library("jsonlite")
library("dplyr")
library("tidyr")
library("knitr")
#defining a variable and assigning it the base url
base_url <- "https://api.themoviedb.org/3"
# 1 assigning varaible to tmb key
source("apikey.R")
key_param <- list(api_key = tmdb_key)
#2 adding filename to gitingnore file
#done in .gitignore file
##########################
#####  Data analysis #####
##########################
#1 defining a function that acesses the info on the trending data and returns a data frame
get_trending_table <- function() {
#1 part 1
# Using the get function to get the "Get Trending" endpoint
endpoint <- ("/trending/person/week")
uri <- paste0(base_url, endpoint)
trending <- GET(uri, query = key_param)
print(trending)
#1 part 2
# Converting the text from JSON into R data
response_text <- content(trending, "text")
responding_data <- fromJSON(response_text)
#1 part 3
#Inspecting the data content and finding the trending data
trending_df <- response_data$results
#1 part 4: Modifying the data frame
# filtering for people who are  for acting/ formatting for a markdown image
data_actors <- trending_df %>%
filter(department_known == "Acting") %>%
#creating a column for the actor's photo
data_actors <- trending_df %>%
filter(known_for_department ==  "Acting") %>%
mutate(photo == paste0("![",name,"](https://image.tmdb.org/t/p/h100", profile_path,")")) %>%
#selecting the columns with actor's name and photo
select(name, photo) %>%
#selecting the first five actors
head(5)
return(trending)
}
results <- get_trending_table()
#2. Specific Actor Data
# defining a function that will return a list of data about the actor specified
get_actor_data <- function(search_actor_name) {
#2 part 1
#specifying the actor by name through requesting  "Search People" endpoint
endpoint <- "/search/person"
searh_name_uri <- paste(base_url, endpoint)
params_list <- list("query" = search_actor_name, "api_key" = key_param$api_key)
search_response <- GET(search_name_uri, query = params_list)
search_response_text <- content(search_response, type = "text")
search_response_text <- fromJSON(search_response_text)
actors_data <- search_response_text$results
#extracting the actor's interval id number
number_id <- actors_data[actors_data$name == search_actor_name, "id"]
#extracting the vector of titles of movies the actor is known for.
movies_known_for <- actors_data$known_for[[1]]$title
#2 part 3
#Getting an endpoint to "Get Person Details"
second_endpoint <- "/person/"
serch_person_uri <- paste0(base_url, second_endpoint, number_id)
second_response <- GET(search_person_uri, "query" = key_param)
second_response_text <- content(second_response, type = "text")
second_response_text <- fromJSON(second_response_text)
View(second_response_text)
get_biography <- second_response_text$biography
get_imdb_id <- second_response_text$imdb_id
#2 part 4
#returning a list with the actors name, id, imbd id, biography, and movie titles they are known for
actor_result <- list("Name" = search_actor_name, "IMDB id" = get_imdb_id, "id" = number_id,
"Biography" = get_biography)
}
analysis_results <- ge
#3. 3. Analysis of an Actor
# answering my own question aabout an actor's career
# My Quesiton: Which genre of film is most common for Ryan Reynolds
analyse_actor <- function(actor){
#3 part 1
# Creating an endpoint for data about the actor using GET
movie_credit_endpoint <- "/person/number-id/movie_credits"
movie_credit_uri <- paste0(base_url, movie_credit_endpoint)
# params_list <- list("query" = search_actor, "api_key" = key_param$api_key)
movie_credit_response <- GET(movie_credit_uri, "query" = params_list)
movie_credit_text <- content(movie_credit_response, type = "text")
movie_credit_text <- fromJSON(movie_credit_text)
#Creating an endpoint for a search endpoint with filtering options
search_endpoint <- "/discover/movie"
search_uri <- paste0(base_url, search_endpoint)
search_response <- GET(search_uri, "query" = key_param)
search_text <- content(search_response, type = "text")
search_text <- fromJSON(search_text)
movie_sum <- sum(nrow(search_text$movies))
#3 part 2
#Filtering for the genre of films ryan renolds was in
get_movie_genre <- search_text$genre
#searching for the most popluar genre
pop_movie_genre <- nrow(search_text$genre == "")
#3 part 3
#getting the sum of the most popular genre of
sum()
#3 part 4
#returning a list with the analysis results including the sum of
}
######################
##### The Report #####
######################
#Introductory Material
#1
#2
#3
#Trending Actors
#4
#5
#6
#Specific Actor Data
#7
#8
#9
#10
#11
#Analysis of an Actor
#12
#13
#14
#15
#1 defining a function that acesses the info on the trending data and returns a data frame
get_trending_table <- function() {
#1 part 1
# Using the get function to get the "Get Trending" endpoint
endpoint <- ("/trending/person/week")
uri <- paste0(base_url, endpoint)
trending <- GET(uri, query = key_param)
print(trending)
#1 part 2
# Converting the text from JSON into R data
response_text <- content(trending, "text")
responding_data <- fromJSON(response_text)
#1 part 3
#Inspecting the data content and finding the trending data
trending_df <- response_data$results
#1 part 4: Modifying the data frame
# filtering for people who are  for acting/ formatting for a markdown image
data_actors <- trending_df %>%
filter(department_known == "Acting") %>%
#creating a column for the actor's photo
data_actors <- trending_df %>%
filter(known_for_department ==  "Acting") %>%
mutate(photo == paste0("![",name,"](https://image.tmdb.org/t/p/h100", profile_path,")")) %>%
#selecting the columns with actor's name and photo
select(name, photo) %>%
#selecting the first five actors
head(5)
return(trending)
}
results <- get_trending_table()
results
setwd("C:/Users/serge/a5-data-report-angelinapolt")
